<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DRAFT: A Validators Guide to Disaster Recovery</title>
    <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315</link>
    <description># Overview
A major incident is when your validator node becomes unavailable on the Radix Public Network and you are unable to fail over to a backup node in a timely manner.

You should **strongly** consider unregistering your node as a validator if the outage occurs for longer than 2 or 3 epochs because your outage will affect the performance of the entire Radix Public Network - especially if your node has a large delegated stake.

# 1 Preparation
An effective disaster recovery strategy requires some preparation in advance. A few steps now will save you a lot of pain later when you are under pressure dealing with a major incident.

### 1.1 Keep multiple copies of your Node Keystore File
Take a copy of your validator&#39;s `node-keystore.ks` and save at least 2 copies. One to your local computer, and another copy on a removable USB thumb drive. Even better, keep a 3rd copy on a USB thumb drive and keep it at another location. Dropbox/Google Drive are other other strategies for keeping multiple copies - but it might be worth encrypting the file using GPG or similar as an additional security measure.

### 1.2 Keep multiple copies of your Keystore File Password
Keep a local copy of the node-keystore.ks password. The file is useless without the corresponding password. Save the password in your password manager or in an encrypted archive file with the keystore file.

### 1.3 Install Python 3
Install Python 3 on your local computer if not already installed and ensure that it works.

### 1.4 Save a copy of the Python Validator Unregister script 
Save a copy of the Validator Unregister Python script that allows you to unregister you validator node when you don&#39;t have access to the node or it isn&#39;t fully synced.

**Script available here:** 
https://github.com/radixpool/validator-tools
```text
Usage: unregister.py [OPTIONS]

  Unregisters a Validator node using a Keystore file and password

Options:
  -f, --filename FILE             Keystore filename  [default: node-
                                  keystore.ks]
  -p, --password TEXT             Keystore password. Will be prompted if not
                                  provided as an option.
  -n, --network [mainnet|stokenet]
                                  Radix Network  [default: mainnet]
  -d, --dry-run                   Do not make any changes
  -v, --verbose                   Show details of api calls and responses
  --yes                           Confirm the action without prompting.
  -h, --help                      Show this message and exit.
```
*Note: Script is still under active development (will break up into functions, honest!) and currently uses the old Archive API calls. New Gateway API is missing the ability to unregister/register validator nodes. Issue raised with Dev team.*

### 1.5 Install Python Dependencies
Fetch the requirements.txt file and install the python dependencies using the following command:
```bash
pip install -r requirements.txt
```

### 1.6 Test the Validator Unregister script
Do a &quot;dry-run&quot; of the validator unregister script to ensure that Python, script dependencies and the script itself are all working correctly. The `--dry-run` or `-d` option will perform all steps in the script except make any changes to the Radix ledger.

For example: dry-run on Mainnet using node-keystore.ks file in current directory and showing all request and response JSON messages
```bash
python unregister.py --dry-run --verbose
```

### 1.7 Keep at least 12 XRD into your Validator Node Wallet
Keep a balance of at least 12 XRD in your Validator Node wallet so that you can unregister the node (~5 XRD) and re-register it later (~5 XRD).

### 1.8 Bookmark Service Providers Status/Maintenance Pages
Find and bookmark your service provider&#39;s status page and maintenance page. Also bookmark any social media accounts run by your service provider as these will often be updated before any status page updates (Amazon is notorious for not updating their status pages in a timely manner to reflect major incidents).

This will help you to quickly assess whether an incident is local to you or a more general issue.

# 2 When Disaster Strikes
[TODO]

### 2.1 Assess Incident Severity
Make a quick assessment of the severity of the incident by considering the following:

* How long has you validator node already been unavailable?
* Is the cause of the issue known?
* Does the incident just affect you or is it more general?

Sources of this information may come from:
* Service providers Status Page
* Service providers Planned Maintenance Page
* Service providers social media account (or searching for &quot;***ProviderName*** down&quot;)

Your node will probably already fallen below the 98% uptime threshold to receive rewards for the current epoch - so give yourself a short, fixed period of time to assess the severity of the issue. Try to keep this assessment time limit within the current epoch if possible or for up to one full epoch at the very most.

### 2.2 Notify the Community
As soon as you are able, notify the community on Discord and Telegram that you are aware of a problem and that you are taking action to resolve the issue. 

An example message could be:

&gt; ***ValidatorName*** is currently down. We are investigating the problem and will provide further updates of the actions we are taking to resolve the issue.

This very simple, but important step notifies the community that you are aware of the issue and that you are taking measures to resolve it.

### 2.3 Choose a Recovery Strategy
There are broadly 3 different recovery strategies:

**2.3.1 Do Nothing**
In the case of a temporary, localised and known issue then the appropriate strategy may be to do nothing and wait. Examples may include planned maintenance/upgrades by the service provider, an application or operating system issue that can be resolved on the server.

The expectation is that the issue will resolve itself (wait for router to reboot) or can be easily fixed through operator action (reboot, restart service, clear disk space, etc.)

* Set a fixed time limit on how long you are prepared to wait before taking further action - ideally before the end of the epoch.
* Continue to make preparations for further recovery strategies while you wait in case the issue does not resolve itself.

**2.3.2 Fail over to Backup Node**
[DRAFT] Do this if you have a synced backup node in another location and can easily do so.

**2.3.3 Unregister your Node**
[DRAFT] Do this if you are not able to fail over to a synced backup node. Takes the immediate pressure off, stops disruption of the Radix Public Network, stops your downtime continuously spiralling down. Apply one of the other Recovery Strategies.

### 2.4 Update the Community
Provide an update to the community to let them know whether:

a) The issue has been resolved

or

b) Recovery is in progress and, if possible, an estimated time to resolution (eg. Radix node database is syncing from scratch and will take about 12 hours to complete)

# 3 Post Incident Analysis
A Post Incident Analysis (also known as a Post-Mortem) is a valuable exercise to learn from an incident and ideally share your findings with other Node Runners so that we may all benefit from findings.

### 3.1 Internal Investigation
After the incident is resolved and is still fresh in your mind, take a moment to make notes about what happened and how you resolved it. 

Consider:

* What worked well? (eg. Monitoring system promptly generated alerts about the issue :slight_smile:)
* What didn&#39;t work well? (eg. Phone was set to silent so missed the alerts :upside_down_face:)
* Is there anything I can do to prevent the issue from occurring again? (eg. Monitor additional metrics, create alerts for low disk space, automate some process, pay more attention to planned maintenance notifications)
* Are their opportunities to automate some of the recovery steps using tested scripts that reduce operator error when under stress?
* [TODO]

### 3.2 Share your Findings
[DRAFT] The node runner community benefits hugely from sharing our expertise and experiences with others.</description>
    <language>en-GB</language>
    <lastBuildDate>Sun, 27 Feb 2022 11:20:10 +0000</lastBuildDate>
    <category>Validators</category>
    <atom:link href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Jazzer 9F]]></dc:creator>
        <description><![CDATA[
            <p>I’ve loaded the unregister.py script on my nodes and gone through how it works.<br>
Are you planning a re-register option as well, or do we follow the regular process for that?</p>
<p>Thanks &amp; Cheers!</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/7">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/7</link>
        <pubDate>Sun, 27 Feb 2022 11:20:10 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-7</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Jazzer 9F]]></dc:creator>
        <description><![CDATA[
            <p>Did they confirm this will be added to the Gateway API <strong>before</strong> decommissioning the archive nodes on mainnet? Because that’s happening rather soon IIRC. It would be pretty bad if we can’t deregister non-running nodes for a couple of months…</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/6">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/6</link>
        <pubDate>Sat, 05 Feb 2022 22:08:18 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-6</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Ed &amp; James]]></dc:creator>
        <description><![CDATA[
            <p>Ran into this last night but figured that was the reason.</p>
<p>This page is developing into one the most important pages that all node runners should familiarise themselves with. Thank you for everything you do for the community.</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/5">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/5</link>
        <pubDate>Sat, 05 Feb 2022 12:55:45 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-5</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Stuart | RadixPool]]></dc:creator>
        <description><![CDATA[
            <p>The unregister.py script does not currently work on Stokenet.</p>
<p>The old Archive API has been removed from Stokenet and the new Gateway API doesn’t currently support Register/Unregister of validators. The dev team have put this on the development backlog and the script will be updated to handle the new Gateway API as soon as this is released.</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/4">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/4</link>
        <pubDate>Sat, 05 Feb 2022 10:27:48 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-4</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Stuart | RadixPool]]></dc:creator>
        <description><![CDATA[
            <p><s>Can definitely do that. My idea was to have a dry run option that does everything except submitting the final transaction that makes the change on the ledger. It ensures you have the right python dependencies installed, that your keystore file and password work, and that you have network connectivity to build a transaction. Will get to work on it soon™…</s><br>
Done! Ability to choose mainnet or stokenet, and to do a dry-run which doesn’t submit the final request to apply the change.</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/3">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/3</link>
        <pubDate>Wed, 02 Feb 2022 17:02:36 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-3</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Ed &amp; James]]></dc:creator>
        <description><![CDATA[
            <p>This is awesome - thank you <a class="mention" href="https://radixtalk.com/u/stuart">@Stuart</a>. I know this is a work in progress, but I could see value in step 6 potentially including instructions for using the script to unregister a Stokenet node for testing purposes. Just a thought.</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/2">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/2</link>
        <pubDate>Wed, 02 Feb 2022 16:56:48 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-2</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
      <item>
        <title>DRAFT: A Validators Guide to Disaster Recovery</title>
        <dc:creator><![CDATA[Stuart | RadixPool]]></dc:creator>
        <description><![CDATA[
            <h1>
<a name="overview-1" class="anchor" href="https://radixtalk.com#overview-1"></a>Overview</h1>
<p>A major incident is when your validator node becomes unavailable on the Radix Public Network and you are unable to fail over to a backup node in a timely manner.</p>
<p>You should <strong>strongly</strong> consider unregistering your node as a validator if the outage occurs for longer than 2 or 3 epochs because your outage will affect the performance of the entire Radix Public Network - especially if your node has a large delegated stake.</p>
<h1>
<a name="h-1-preparation-2" class="anchor" href="https://radixtalk.com#h-1-preparation-2"></a>1 Preparation</h1>
<p>An effective disaster recovery strategy requires some preparation in advance. A few steps now will save you a lot of pain later when you are under pressure dealing with a major incident.</p>
<h3>
<a name="h-11-keep-multiple-copies-of-your-node-keystore-file-3" class="anchor" href="https://radixtalk.com#h-11-keep-multiple-copies-of-your-node-keystore-file-3"></a>1.1 Keep multiple copies of your Node Keystore File</h3>
<p>Take a copy of your validator’s <code>node-keystore.ks</code> and save at least 2 copies. One to your local computer, and another copy on a removable USB thumb drive. Even better, keep a 3rd copy on a USB thumb drive and keep it at another location. Dropbox/Google Drive are other other strategies for keeping multiple copies - but it might be worth encrypting the file using GPG or similar as an additional security measure.</p>
<h3>
<a name="h-12-keep-multiple-copies-of-your-keystore-file-password-4" class="anchor" href="https://radixtalk.com#h-12-keep-multiple-copies-of-your-keystore-file-password-4"></a>1.2 Keep multiple copies of your Keystore File Password</h3>
<p>Keep a local copy of the node-keystore.ks password. The file is useless without the corresponding password. Save the password in your password manager or in an encrypted archive file with the keystore file.</p>
<h3>
<a name="h-13-install-python-3-5" class="anchor" href="https://radixtalk.com#h-13-install-python-3-5"></a>1.3 Install Python 3</h3>
<p>Install Python 3 on your local computer if not already installed and ensure that it works.</p>
<h3>
<a name="h-14-save-a-copy-of-the-python-validator-unregister-script-6" class="anchor" href="https://radixtalk.com#h-14-save-a-copy-of-the-python-validator-unregister-script-6"></a>1.4 Save a copy of the Python Validator Unregister script</h3>
<p>Save a copy of the Validator Unregister Python script that allows you to unregister you validator node when you don’t have access to the node or it isn’t fully synced.</p>
<p><strong>Script available here:</strong></p><aside class="onebox allowlistedgeneric" data-onebox-src="https://github.com/radixpool/validator-tools">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">

      <a href="https://github.com/radixpool/validator-tools" target="_blank" rel="noopener">GitHub</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/345;"><img src="https://radixtalk.com/uploads/default/optimized/1X/a1ed89b95e674c115886215df27f8ea4f053ea8e_2_690x345.png" class="thumbnail" width="690" height="345" srcset="https://radixtalk.com/uploads/default/optimized/1X/a1ed89b95e674c115886215df27f8ea4f053ea8e_2_690x345.png, https://radixtalk.com/uploads/default/optimized/1X/a1ed89b95e674c115886215df27f8ea4f053ea8e_2_1035x517.png 1.5x, https://radixtalk.com/uploads/default/original/1X/a1ed89b95e674c115886215df27f8ea4f053ea8e.png 2x" data-small-upload="https://radixtalk.com/uploads/default/optimized/1X/a1ed89b95e674c115886215df27f8ea4f053ea8e_2_10x10.png"></div>

<h3><a href="https://github.com/radixpool/validator-tools" target="_blank" rel="noopener">GitHub - radixpool/validator-tools</a></h3>

  <p>Contribute to radixpool/validator-tools development by creating an account on GitHub.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<pre><code class="lang-nohighlight">Usage: unregister.py [OPTIONS]

  Unregisters a Validator node using a Keystore file and password

Options:
  -f, --filename FILE             Keystore filename  [default: node-
                                  keystore.ks]
  -p, --password TEXT             Keystore password. Will be prompted if not
                                  provided as an option.
  -n, --network [mainnet|stokenet]
                                  Radix Network  [default: mainnet]
  -d, --dry-run                   Do not make any changes
  -v, --verbose                   Show details of api calls and responses
  --yes                           Confirm the action without prompting.
  -h, --help                      Show this message and exit.
</code></pre>
<p><em>Note: Script is still under active development (will break up into functions, honest!) and currently uses the old Archive API calls. New Gateway API is missing the ability to unregister/register validator nodes. Issue raised with Dev team.</em></p>
<h3>
<a name="h-15-install-python-dependencies-7" class="anchor" href="https://radixtalk.com#h-15-install-python-dependencies-7"></a>1.5 Install Python Dependencies</h3>
<p>Fetch the requirements.txt file and install the python dependencies using the following command:</p>
<pre><code class="lang-bash">pip install -r requirements.txt
</code></pre>
<h3>
<a name="h-16-test-the-validator-unregister-script-8" class="anchor" href="https://radixtalk.com#h-16-test-the-validator-unregister-script-8"></a>1.6 Test the Validator Unregister script</h3>
<p>Do a “dry-run” of the validator unregister script to ensure that Python, script dependencies and the script itself are all working correctly. The <code>--dry-run</code> or <code>-d</code> option will perform all steps in the script except make any changes to the Radix ledger.</p>
<p>For example: dry-run on Mainnet using node-keystore.ks file in current directory and showing all request and response JSON messages</p>
<pre><code class="lang-bash">python unregister.py --dry-run --verbose
</code></pre>
<h3>
<a name="h-17-keep-at-least-12-xrd-into-your-validator-node-wallet-9" class="anchor" href="https://radixtalk.com#h-17-keep-at-least-12-xrd-into-your-validator-node-wallet-9"></a>1.7 Keep at least 12 XRD into your Validator Node Wallet</h3>
<p>Keep a balance of at least 12 XRD in your Validator Node wallet so that you can unregister the node (~5 XRD) and re-register it later (~5 XRD).</p>
<h3>
<a name="h-18-bookmark-service-providers-statusmaintenance-pages-10" class="anchor" href="https://radixtalk.com#h-18-bookmark-service-providers-statusmaintenance-pages-10"></a>1.8 Bookmark Service Providers Status/Maintenance Pages</h3>
<p>Find and bookmark your service provider’s status page and maintenance page. Also bookmark any social media accounts run by your service provider as these will often be updated before any status page updates (Amazon is notorious for not updating their status pages in a timely manner to reflect major incidents).</p>
<p>This will help you to quickly assess whether an incident is local to you or a more general issue.</p>
<h1>
<a name="h-2-when-disaster-strikes-11" class="anchor" href="https://radixtalk.com#h-2-when-disaster-strikes-11"></a>2 When Disaster Strikes</h1>
<p>[TODO]</p>
<h3>
<a name="h-21-assess-incident-severity-12" class="anchor" href="https://radixtalk.com#h-21-assess-incident-severity-12"></a>2.1 Assess Incident Severity</h3>
<p>Make a quick assessment of the severity of the incident by considering the following:</p>
<ul>
<li>How long has you validator node already been unavailable?</li>
<li>Is the cause of the issue known?</li>
<li>Does the incident just affect you or is it more general?</li>
</ul>
<p>Sources of this information may come from:</p>
<ul>
<li>Service providers Status Page</li>
<li>Service providers Planned Maintenance Page</li>
<li>Service providers social media account (or searching for “<em><strong>ProviderName</strong></em> down”)</li>
</ul>
<p>Your node will probably already fallen below the 98% uptime threshold to receive rewards for the current epoch - so give yourself a short, fixed period of time to assess the severity of the issue. Try to keep this assessment time limit within the current epoch if possible or for up to one full epoch at the very most.</p>
<h3>
<a name="h-22-notify-the-community-13" class="anchor" href="https://radixtalk.com#h-22-notify-the-community-13"></a>2.2 Notify the Community</h3>
<p>As soon as you are able, notify the community on Discord and Telegram that you are aware of a problem and that you are taking action to resolve the issue.</p>
<p>An example message could be:</p>
<blockquote>
<p><em><strong>ValidatorName</strong></em> is currently down. We are investigating the problem and will provide further updates of the actions we are taking to resolve the issue.</p>
</blockquote>
<p>This very simple, but important step notifies the community that you are aware of the issue and that you are taking measures to resolve it.</p>
<h3>
<a name="h-23-choose-a-recovery-strategy-14" class="anchor" href="https://radixtalk.com#h-23-choose-a-recovery-strategy-14"></a>2.3 Choose a Recovery Strategy</h3>
<p>There are broadly 3 different recovery strategies:</p>
<p><strong>2.3.1 Do Nothing</strong><br>
In the case of a temporary, localised and known issue then the appropriate strategy may be to do nothing and wait. Examples may include planned maintenance/upgrades by the service provider, an application or operating system issue that can be resolved on the server.</p>
<p>The expectation is that the issue will resolve itself (wait for router to reboot) or can be easily fixed through operator action (reboot, restart service, clear disk space, etc.)</p>
<ul>
<li>Set a fixed time limit on how long you are prepared to wait before taking further action - ideally before the end of the epoch.</li>
<li>Continue to make preparations for further recovery strategies while you wait in case the issue does not resolve itself.</li>
</ul>
<p><strong>2.3.2 Fail over to Backup Node</strong><br>
[DRAFT] Do this if you have a synced backup node in another location and can easily do so.</p>
<p><strong>2.3.3 Unregister your Node</strong><br>
[DRAFT] Do this if you are not able to fail over to a synced backup node. Takes the immediate pressure off, stops disruption of the Radix Public Network, stops your downtime continuously spiralling down. Apply one of the other Recovery Strategies.</p>
<h3>
<a name="h-24-update-the-community-15" class="anchor" href="https://radixtalk.com#h-24-update-the-community-15"></a>2.4 Update the Community</h3>
<p>Provide an update to the community to let them know whether:</p>
<p>a) The issue has been resolved</p>
<p>or</p>
<p>b) Recovery is in progress and, if possible, an estimated time to resolution (eg. Radix node database is syncing from scratch and will take about 12 hours to complete)</p>
<h1>
<a name="h-3-post-incident-analysis-16" class="anchor" href="https://radixtalk.com#h-3-post-incident-analysis-16"></a>3 Post Incident Analysis</h1>
<p>A Post Incident Analysis (also known as a Post-Mortem) is a valuable exercise to learn from an incident and ideally share your findings with other Node Runners so that we may all benefit from findings.</p>
<h3>
<a name="h-31-internal-investigation-17" class="anchor" href="https://radixtalk.com#h-31-internal-investigation-17"></a>3.1 Internal Investigation</h3>
<p>After the incident is resolved and is still fresh in your mind, take a moment to make notes about what happened and how you resolved it.</p>
<p>Consider:</p>
<ul>
<li>What worked well? (eg. Monitoring system promptly generated alerts about the issue <img src="https://radixtalk.com/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20">)</li>
<li>What didn’t work well? (eg. Phone was set to silent so missed the alerts <img src="https://radixtalk.com/images/emoji/twitter/upside_down_face.png?v=12" title=":upside_down_face:" class="emoji" alt=":upside_down_face:" loading="lazy" width="20" height="20">)</li>
<li>Is there anything I can do to prevent the issue from occurring again? (eg. Monitor additional metrics, create alerts for low disk space, automate some process, pay more attention to planned maintenance notifications)</li>
<li>Are their opportunities to automate some of the recovery steps using tested scripts that reduce operator error when under stress?</li>
<li>[TODO]</li>
</ul>
<h3>
<a name="h-32-share-your-findings-18" class="anchor" href="https://radixtalk.com#h-32-share-your-findings-18"></a>3.2 Share your Findings</h3>
<p>[DRAFT] The node runner community benefits hugely from sharing our expertise and experiences with others.</p>
          <p><a href="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/1">Read full topic</a></p>
        ]]></description>
        <link>https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315/1</link>
        <pubDate>Wed, 02 Feb 2022 09:31:57 +0000</pubDate>
        <guid isPermaLink="false">radixtalk.com-post-315-1</guid>
        <source url="https://radixtalk.com/t/draft-a-validators-guide-to-disaster-recovery/315.rss">DRAFT: A Validators Guide to Disaster Recovery</source>
      </item>
  </channel>
</rss>
